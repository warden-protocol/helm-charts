---
image: ghcr.io/warden-protocol/wardenprotocol/wardend
imagePullPolicy: IfNotPresent
imageTag: "v0.4.2"
imagePullSecrets: []
podSecurityContext:
  fsGroup: 1000

keyringBackend: "test"
debug: "false"

podAnnotations: {}
podDisruptionBudget:
  enabled: false
  minAvailable: ""
  maxUnavailable: ""
serviceAnnotations: {}
serviceMonitor:
  extraLabels: {}

# scratch / snapshot
syncMethod: "scratch"

snapshot:
  url: https://github.com/warden-protocol/snapshots/raw/main/devnet.tar.gz

scratch:
  genesisUrl: ""

cosmovisor:
  enabled: false
  version: "v1.5.0"
  restartAfterUpgrade: true
  allowDowloadBinaries: true
  logBufferSize: "512"
  unsafeSkipBackup: true

echo:
  enabled: false
  image: ghcr.io/warden-protocol/echo
  imageTag: "1.1.0"
  imagePullPolicy: IfNotPresent
  port: 10010
  behindThreshold: 5
  endpoints: "http://localhost:26657"
  peers: ""

topologySpreadConstraints:
  enabled: false
  maxSkew: 1
  whenUnsatisfiable: DoNotSchedule

eipController:
  enabled: false
  check: false

env: []

node:
  enabled: true
  ready: true
  name: node
  home: /data/.warden
  logLevel: "info"
  externalSigner: false
  mnemonicSecretName: ""
  nodeKeysSecretName: ""
  genesisSecretName: ""
  replicaCount: 1
  moniker: "mynode"
  minGasPrice: "0award"
  mempool:
    size: 5000
    maxTxs: 5000
  securityContext:
    runAsUser: 1000
    runAsGroup: 1000
    runAsNonRoot: true
  rpc:
    enabled: true
  grpc:
    enabled: false
  p2p:
    enabled: true
    external: false
    serviceAnnotations: {}
    serviceLoadBalancerClass: "service.k8s.aws/nlb"
    trafficPolicy: "Cluster"
    externalAddress: ""
    externalDNS:
      enabled: false
      domain: ""
    addrBookStrict: false
    pex: false
    maxInboundPeers: 40
    maxOutboundPeers: 10
    seedMode: false
    seeds: ""
    persistentPeers: ""
    privatePeerIds: ""
  api:
    enabled: true
    swagger: false
  statesync:
    enabled: false
    rpcServers: ""
    trustHeight: 0
    trustHash: ""
    trustPeriod: "168h0m0s"
  pruning:
    mode: "default"
    pruningKeepRecent: "0"
    pruningInterval: "0"
  metrics:
    enabled: true
  resources: {}
  persistent:
    size: 10Gi
    class: ""
  ingress:
    enabled: false
    annotations: {}
    externalDNS: false
    class: ""
    host: ""
    pathType: ImplementationSpecific
  stateSync:
    snapshotInterval: 0
    snapshotKeepRecent: 2
  livenessProbe:
    path: /health
    port: rpc
    initialDelaySeconds: 30
    failureThreshold: 5
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 3

persistentVolumeClaimName: ""

nodeSelector: {}

tolerations: []

affinity: {}

secretManager:
  enabled: false
  serviceAccount:
    create: false
    name: ""
    annotations: {}
  secrets: []

oracle:
  enabled: false
  image: ghcr.io/skip-mev/slinky-sidecar
  imageTag: v1.0.12
  metricsEnabled: false
  priceTTL: 10s
  interval: 5s
  securityContext:
    runAsUser: 65532
    runAsGroup: 65532
    runAsNonRoot: true

evm:
  rpc: true
  metrics: true
  api: "eth,net,web3"
  gasCap: "25000000"
  allowInsecureUnlock: true
  evmTimeout: "5s"
  txfeeCap: 1
  filterCap: 200
  feehistoryCap: 100
  logsCap: 10000
  blockRangeCap: 10000
  httpTimeout: "30s"
  httpIdleTimeout: "2m0s"
  allowUnprotectedTxs: false
  maxOpenConnections: 10
  enableIndexer: false

networkPolicy:
  enabled: true
  signer:
    podSelector: {}
    namespaceSelector: {}
  metrics:
    podSelector: {}
    namespaceSelector: {}
