---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "snapshots.fullname" . }}
  labels:
    {{- include "snapshots.labels" . | nindent 4 }}
spec:
  schedule: "{{ .Values.cronjob.schedule }}"
  successfulJobsHistoryLimit: {{ .Values.cronjob.successfulJobsHistoryLimit }}
  failedJobsHistoryLimit: {{ .Values.cronjob.failedJobsHistoryLimit }}
  jobTemplate:
    spec:
      backoffLimit: {{ .Values.cronjob.backoffLimit }}
      template:
        spec:
          serviceAccountName: {{ .Values.serviceAccount.name }}
          containers:
          - name: snapshots-container
            image: {{ .Values.cronjob.image.repository }}:{{ .Values.cronjob.image.tag }}
            imagePullPolicy: {{ .Values.cronjob.image.pullPolicy }}
            command:
            - /bin/sh
            - -c
            - |
              /bin/sh /scripts/prepare.sh
              # check if the script exited with status 1
              if [ $? -eq 1 ]; then
                echo "prepare.sh script exited with status 1. Exiting."
                exit 1
              fi
              replicas=$(kubectl get sts {{ .Values.cronjob.stsName }} -o jsonpath='{.spec.replicas}')
              pvcname={{ .Values.cronjob.stsName }}-data-{{ .Values.cronjob.stsName }}-$replicas
              cat <<EOF | kubectl apply -f -
              apiVersion: batch/v1
              kind: Job
              metadata:
                name: {{ include "snapshots.fullname" . }}
                namespace: {{ .Release.Namespace }}
              spec:
                ttlSecondsAfterFinished: {{ .Values.cronjob.ttlSecondsAfterFinished }}
                template:
                  spec:
                    serviceAccountName: {{ .Values.serviceAccount.name }}
                    {{- with .Values.cronjob.imagePullSecrets }}
                    imagePullSecrets:
                      {{- toYaml . | nindent 22 }}
                    {{- end }}
                    containers:
                      - name: snapshots-container
                        image: {{ .Values.cronjob.image.repository }}:{{ .Values.cronjob.image.tag }}
                        imagePullPolicy: {{ .Values.cronjob.image.pullPolicy }}
                        resources:
                          {{- toYaml .Values.cronjob.resources | nindent 26 }}
                        volumeMounts:
                          - name: scripts
                            mountPath: /scripts
                          - name: argocd
                            mountPath: /etc/argocd
                            readOnly: true
                          - name: pvc
                            mountPath: /pvc
                            readOnly: true
                        command: ["/bin/bash", "/scripts/snapshot.sh"]
                    restartPolicy: Never
                    volumes:
                      - name: scripts
                        configMap:
                          name: {{ include "snapshots.fullname" . }}-scripts
                      - name: argocd
                      {{- if .Values.secretManager.enabled }}
                        csi:
                          driver: secrets-store.csi.k8s.io
                          readOnly: true
                          volumeAttributes:
                            secretProviderClass: {{ include "snapshots.fullname" . }}
                      {{- else }}
                        secret:
                          secretName: {{ .Values.cronjob.argocdAuthSecret }}
                      {{- end }}
                      - name: pvc
                        persistentVolumeClaim:
                          claimName: $pvcname
              EOF
            volumeMounts:
              - name: scripts
                mountPath: /scripts
              - name: argocd
                mountPath: /etc/argocd
                readOnly: true
          restartPolicy: Never
          volumes:
            - name: scripts
              configMap:
                name: {{ include "snapshots.fullname" . }}-scripts
            - name: argocd
            {{- if .Values.secretManager.enabled }}
              csi:
                driver: secrets-store.csi.k8s.io
                readOnly: true
                volumeAttributes:
                  secretProviderClass: {{ include "snapshots.fullname" . }}
            {{- else }}
              secret:
                secretName: {{ .Values.cronjob.argocdAuthSecret }}
            {{- end }}
